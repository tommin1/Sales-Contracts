//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference3
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", ConfigurationName="ServiceReference3.File_Management_Port")]
    public interface File_Management_Port
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ServerTempFileName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ServerTempFileName_Result> ServerTempFileNameAsync(ServiceReference3.ServerTempFileName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ClientTempFileName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ClientTempFileName_Result> ClientTempFileNameAsync(ServiceReference3.ClientTempFileName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CreateClientTempSubDirect" +
            "ory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CreateClientTempSubDirectory_Result> CreateClientTempSubDirectoryAsync(ServiceReference3.CreateClientTempSubDirectory request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:DownloadTempFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.DownloadTempFile_Result> DownloadTempFileAsync(ServiceReference3.DownloadTempFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:UploadFileSilent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFileSilent_Result> UploadFileSilentAsync(ServiceReference3.UploadFileSilent request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:UploadFileSilentToServerP" +
            "ath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFileSilentToServerPath_Result> UploadFileSilentToServerPathAsync(ServiceReference3.UploadFileSilentToServerPath request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFile_Result> UploadFileAsync(ServiceReference3.UploadFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:UploadFileWithFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFileWithFilter_Result> UploadFileWithFilterAsync(ServiceReference3.UploadFileWithFilter request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:Magicpath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.Magicpath_Result> MagicpathAsync(ServiceReference3.Magicpath request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:DownloadHandler", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.DownloadHandler_Result> DownloadHandlerAsync(ServiceReference3.DownloadHandler request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:DownloadToFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.DownloadToFile_Result> DownloadToFileAsync(ServiceReference3.DownloadToFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:AppendAllTextToClientFile" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.AppendAllTextToClientFile_Result> AppendAllTextToClientFileAsync(ServiceReference3.AppendAllTextToClientFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:MoveAndRenameClientFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.MoveAndRenameClientFile_Result> MoveAndRenameClientFileAsync(ServiceReference3.MoveAndRenameClientFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CreateClientFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CreateClientFile_Result> CreateClientFileAsync(ServiceReference3.CreateClientFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:DeleteClientFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.DeleteClientFile_Result> DeleteClientFileAsync(ServiceReference3.DeleteClientFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CopyClientFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CopyClientFile_Result> CopyClientFileAsync(ServiceReference3.CopyClientFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ClientFileExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ClientFileExists_Result> ClientFileExistsAsync(ServiceReference3.ClientFileExists request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ClientDirectoryExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ClientDirectoryExists_Result> ClientDirectoryExistsAsync(ServiceReference3.ClientDirectoryExists request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CreateClientDirectory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CreateClientDirectory_Result> CreateClientDirectoryAsync(ServiceReference3.CreateClientDirectory request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:DeleteClientDirectory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.DeleteClientDirectory_Result> DeleteClientDirectoryAsync(ServiceReference3.DeleteClientDirectory request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:UploadClientDirectorySile" +
            "nt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.UploadClientDirectorySilent_Result> UploadClientDirectorySilentAsync(ServiceReference3.UploadClientDirectorySilent request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:MoveFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.MoveFile_Result> MoveFileAsync(ServiceReference3.MoveFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CopyServerFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CopyServerFile_Result> CopyServerFileAsync(ServiceReference3.CopyServerFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ServerFileExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ServerFileExists_Result> ServerFileExistsAsync(ServiceReference3.ServerFileExists request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:DeleteServerFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.DeleteServerFile_Result> DeleteServerFileAsync(ServiceReference3.DeleteServerFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ServerDirectoryExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ServerDirectoryExists_Result> ServerDirectoryExistsAsync(ServiceReference3.ServerDirectoryExists request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ServerCreateDirectory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ServerCreateDirectory_Result> ServerCreateDirectoryAsync(ServiceReference3.ServerCreateDirectory request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ServerCreateTempSubDirect" +
            "ory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ServerCreateTempSubDirectory_Result> ServerCreateTempSubDirectoryAsync(ServiceReference3.ServerCreateTempSubDirectory request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ServerRemoveDirectory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ServerRemoveDirectory_Result> ServerRemoveDirectoryAsync(ServiceReference3.ServerRemoveDirectory request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetFileName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetFileName_Result> GetFileNameAsync(ServiceReference3.GetFileName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetSafeFileName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetSafeFileName_Result> GetSafeFileNameAsync(ServiceReference3.GetSafeFileName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetFileNameWithoutExtensi" +
            "on", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetFileNameWithoutExtension_Result> GetFileNameWithoutExtensionAsync(ServiceReference3.GetFileNameWithoutExtension request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetDirectoryName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetDirectoryName_Result> GetDirectoryNameAsync(ServiceReference3.GetDirectoryName request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetClientFileProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetClientFileProperties_Result> GetClientFilePropertiesAsync(ServiceReference3.GetClientFileProperties request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CombinePath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CombinePath_Result> CombinePathAsync(ServiceReference3.CombinePath request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetToFilterText", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetToFilterText_Result> GetToFilterTextAsync(ServiceReference3.GetToFilterText request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetExtension", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetExtension_Result> GetExtensionAsync(ServiceReference3.GetExtension request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:OpenFileDialog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.OpenFileDialog_Result> OpenFileDialogAsync(ServiceReference3.OpenFileDialog request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:SaveFileDialog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.SaveFileDialog_Result> SaveFileDialogAsync(ServiceReference3.SaveFileDialog request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:SelectFolderDialog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.SelectFolderDialog_Result> SelectFolderDialogAsync(ServiceReference3.SelectFolderDialog request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CanRunDotNetOnClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CanRunDotNetOnClient_Result> CanRunDotNetOnClientAsync(ServiceReference3.CanRunDotNetOnClient request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:IsWebClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.IsWebClient_Result> IsWebClientAsync(ServiceReference3.IsWebClient request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:IsWindowsClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.IsWindowsClient_Result> IsWindowsClientAsync(ServiceReference3.IsWindowsClient request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:IsValidFileName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.IsValidFileName_Result> IsValidFileNameAsync(ServiceReference3.IsValidFileName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ValidateFileExtension", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ValidateFileExtension_Result> ValidateFileExtensionAsync(ServiceReference3.ValidateFileExtension request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:BrowseForFolderDialog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.BrowseForFolderDialog_Result> BrowseForFolderDialogAsync(ServiceReference3.BrowseForFolderDialog request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:StripNotsupportChrInFileN" +
            "ame", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.StripNotsupportChrInFileName_Result> StripNotsupportChrInFileNameAsync(ServiceReference3.StripNotsupportChrInFileName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CreateZipArchiveObject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CreateZipArchiveObject_Result> CreateZipArchiveObjectAsync(ServiceReference3.CreateZipArchiveObject request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:OpenZipFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.OpenZipFile_Result> OpenZipFileAsync(ServiceReference3.OpenZipFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:AddFileToZipArchive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.AddFileToZipArchive_Result> AddFileToZipArchiveAsync(ServiceReference3.AddFileToZipArchive request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:CloseZipArchive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.CloseZipArchive_Result> CloseZipArchiveAsync(ServiceReference3.CloseZipArchive request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:IsGZip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.IsGZip_Result> IsGZipAsync(ServiceReference3.IsGZip request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:ExtractZipFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.ExtractZipFile_Result> ExtractZipFileAsync(ServiceReference3.ExtractZipFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:IsClientDirectoryEmpty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.IsClientDirectoryEmpty_Result> IsClientDirectoryEmptyAsync(ServiceReference3.IsClientDirectoryEmpty request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:IsServerDirectoryEmpty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.IsServerDirectoryEmpty_Result> IsServerDirectoryEmptyAsync(ServiceReference3.IsServerDirectoryEmpty request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:IsWebOrDeviceClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.IsWebOrDeviceClient_Result> IsWebOrDeviceClientAsync(ServiceReference3.IsWebOrDeviceClient request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/File_Management:GetFileContent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference3.GetFileContent_Result> GetFileContentAsync(ServiceReference3.GetFileContent request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerTempFileName", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerTempFileName
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string fileExtension;
        
        public ServerTempFileName()
        {
        }
        
        public ServerTempFileName(string fileExtension)
        {
            this.fileExtension = fileExtension;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerTempFileName_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerTempFileName_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public ServerTempFileName_Result()
        {
        }
        
        public ServerTempFileName_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientTempFileName", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ClientTempFileName
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string fileExtension;
        
        public ClientTempFileName()
        {
        }
        
        public ClientTempFileName(string fileExtension)
        {
            this.fileExtension = fileExtension;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientTempFileName_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ClientTempFileName_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public ClientTempFileName_Result()
        {
        }
        
        public ClientTempFileName_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateClientTempSubDirectory", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateClientTempSubDirectory
    {
        
        public CreateClientTempSubDirectory()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateClientTempSubDirectory_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateClientTempSubDirectory_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public CreateClientTempSubDirectory_Result()
        {
        }
        
        public CreateClientTempSubDirectory_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadTempFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DownloadTempFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string serverFileName;
        
        public DownloadTempFile()
        {
        }
        
        public DownloadTempFile(string serverFileName)
        {
            this.serverFileName = serverFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadTempFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DownloadTempFile_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public DownloadTempFile_Result()
        {
        }
        
        public DownloadTempFile_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileSilent", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFileSilent
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string clientFilePath;
        
        public UploadFileSilent()
        {
        }
        
        public UploadFileSilent(string clientFilePath)
        {
            this.clientFilePath = clientFilePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileSilent_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFileSilent_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public UploadFileSilent_Result()
        {
        }
        
        public UploadFileSilent_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileSilentToServerPath", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFileSilentToServerPath
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string clientFilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string serverFilePath;
        
        public UploadFileSilentToServerPath()
        {
        }
        
        public UploadFileSilentToServerPath(string clientFilePath, string serverFilePath)
        {
            this.clientFilePath = clientFilePath;
            this.serverFilePath = serverFilePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileSilentToServerPath_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFileSilentToServerPath_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public UploadFileSilentToServerPath_Result()
        {
        }
        
        public UploadFileSilentToServerPath_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string windowTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string clientFileName;
        
        public UploadFile()
        {
        }
        
        public UploadFile(string windowTitle, string clientFileName)
        {
            this.windowTitle = windowTitle;
            this.clientFileName = clientFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFile_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public UploadFile_Result()
        {
        }
        
        public UploadFile_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileWithFilter", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFileWithFilter
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string windowTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string clientFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public string fileFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=3)]
        public string extFilter;
        
        public UploadFileWithFilter()
        {
        }
        
        public UploadFileWithFilter(string windowTitle, string clientFileName, string fileFilter, string extFilter)
        {
            this.windowTitle = windowTitle;
            this.clientFileName = clientFileName;
            this.fileFilter = fileFilter;
            this.extFilter = extFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileWithFilter_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadFileWithFilter_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public UploadFileWithFilter_Result()
        {
        }
        
        public UploadFileWithFilter_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Magicpath", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class Magicpath
    {
        
        public Magicpath()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Magicpath_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class Magicpath_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public Magicpath_Result()
        {
        }
        
        public Magicpath_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadHandler", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DownloadHandler
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string fromFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string dialogTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public string toFolder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=3)]
        public string toFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=4)]
        public string toFile;
        
        public DownloadHandler()
        {
        }
        
        public DownloadHandler(string fromFile, string dialogTitle, string toFolder, string toFilter, string toFile)
        {
            this.fromFile = fromFile;
            this.dialogTitle = dialogTitle;
            this.toFolder = toFolder;
            this.toFilter = toFilter;
            this.toFile = toFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadHandler_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DownloadHandler_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public DownloadHandler_Result()
        {
        }
        
        public DownloadHandler_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadToFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DownloadToFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string serverFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string clientFileName;
        
        public DownloadToFile()
        {
        }
        
        public DownloadToFile(string serverFileName, string clientFileName)
        {
            this.serverFileName = serverFileName;
            this.clientFileName = clientFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadToFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DownloadToFile_Result
    {
        
        public DownloadToFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AppendAllTextToClientFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class AppendAllTextToClientFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string serverFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string clientFileName;
        
        public AppendAllTextToClientFile()
        {
        }
        
        public AppendAllTextToClientFile(string serverFileName, string clientFileName)
        {
            this.serverFileName = serverFileName;
            this.clientFileName = clientFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AppendAllTextToClientFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class AppendAllTextToClientFile_Result
    {
        
        public AppendAllTextToClientFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveAndRenameClientFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class MoveAndRenameClientFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string oldFilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string newFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public string newSubDirectoryName;
        
        public MoveAndRenameClientFile()
        {
        }
        
        public MoveAndRenameClientFile(string oldFilePath, string newFileName, string newSubDirectoryName)
        {
            this.oldFilePath = oldFilePath;
            this.newFileName = newFileName;
            this.newSubDirectoryName = newSubDirectoryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveAndRenameClientFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class MoveAndRenameClientFile_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public MoveAndRenameClientFile_Result()
        {
        }
        
        public MoveAndRenameClientFile_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateClientFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateClientFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePathName;
        
        public CreateClientFile()
        {
        }
        
        public CreateClientFile(string filePathName)
        {
            this.filePathName = filePathName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateClientFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateClientFile_Result
    {
        
        public CreateClientFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DeleteClientFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        public DeleteClientFile()
        {
        }
        
        public DeleteClientFile(string filePath)
        {
            this.filePath = filePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DeleteClientFile_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public DeleteClientFile_Result()
        {
        }
        
        public DeleteClientFile_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyClientFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CopyClientFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string sourceFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string destFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public bool overWrite;
        
        public CopyClientFile()
        {
        }
        
        public CopyClientFile(string sourceFileName, string destFileName, bool overWrite)
        {
            this.sourceFileName = sourceFileName;
            this.destFileName = destFileName;
            this.overWrite = overWrite;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyClientFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CopyClientFile_Result
    {
        
        public CopyClientFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientFileExists", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ClientFileExists
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        public ClientFileExists()
        {
        }
        
        public ClientFileExists(string filePath)
        {
            this.filePath = filePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientFileExists_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ClientFileExists_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public ClientFileExists_Result()
        {
        }
        
        public ClientFileExists_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientDirectoryExists", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ClientDirectoryExists
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string directoryPath;
        
        public ClientDirectoryExists()
        {
        }
        
        public ClientDirectoryExists(string directoryPath)
        {
            this.directoryPath = directoryPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientDirectoryExists_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ClientDirectoryExists_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public ClientDirectoryExists_Result()
        {
        }
        
        public ClientDirectoryExists_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateClientDirectory", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateClientDirectory
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string directoryPath;
        
        public CreateClientDirectory()
        {
        }
        
        public CreateClientDirectory(string directoryPath)
        {
            this.directoryPath = directoryPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateClientDirectory_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateClientDirectory_Result
    {
        
        public CreateClientDirectory_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientDirectory", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DeleteClientDirectory
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string directoryPath;
        
        public DeleteClientDirectory()
        {
        }
        
        public DeleteClientDirectory(string directoryPath)
        {
            this.directoryPath = directoryPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientDirectory_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DeleteClientDirectory_Result
    {
        
        public DeleteClientDirectory_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadClientDirectorySilent", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadClientDirectorySilent
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string directoryPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string fileExtensionFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public bool includeSubDirectories;
        
        public UploadClientDirectorySilent()
        {
        }
        
        public UploadClientDirectorySilent(string directoryPath, string fileExtensionFilter, bool includeSubDirectories)
        {
            this.directoryPath = directoryPath;
            this.fileExtensionFilter = fileExtensionFilter;
            this.includeSubDirectories = includeSubDirectories;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadClientDirectorySilent_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class UploadClientDirectorySilent_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public UploadClientDirectorySilent_Result()
        {
        }
        
        public UploadClientDirectorySilent_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class MoveFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string sourceFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string targetFileName;
        
        public MoveFile()
        {
        }
        
        public MoveFile(string sourceFileName, string targetFileName)
        {
            this.sourceFileName = sourceFileName;
            this.targetFileName = targetFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class MoveFile_Result
    {
        
        public MoveFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyServerFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CopyServerFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string sourceFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string targetFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public bool overwrite;
        
        public CopyServerFile()
        {
        }
        
        public CopyServerFile(string sourceFileName, string targetFileName, bool overwrite)
        {
            this.sourceFileName = sourceFileName;
            this.targetFileName = targetFileName;
            this.overwrite = overwrite;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CopyServerFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CopyServerFile_Result
    {
        
        public CopyServerFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerFileExists", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerFileExists
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        public ServerFileExists()
        {
        }
        
        public ServerFileExists(string filePath)
        {
            this.filePath = filePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerFileExists_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerFileExists_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public ServerFileExists_Result()
        {
        }
        
        public ServerFileExists_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteServerFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DeleteServerFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        public DeleteServerFile()
        {
        }
        
        public DeleteServerFile(string filePath)
        {
            this.filePath = filePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteServerFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class DeleteServerFile_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public DeleteServerFile_Result()
        {
        }
        
        public DeleteServerFile_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerDirectoryExists", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerDirectoryExists
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string directoryPath;
        
        public ServerDirectoryExists()
        {
        }
        
        public ServerDirectoryExists(string directoryPath)
        {
            this.directoryPath = directoryPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerDirectoryExists_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerDirectoryExists_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public ServerDirectoryExists_Result()
        {
        }
        
        public ServerDirectoryExists_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerCreateDirectory", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerCreateDirectory
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string directoryPath;
        
        public ServerCreateDirectory()
        {
        }
        
        public ServerCreateDirectory(string directoryPath)
        {
            this.directoryPath = directoryPath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerCreateDirectory_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerCreateDirectory_Result
    {
        
        public ServerCreateDirectory_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerCreateTempSubDirectory", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerCreateTempSubDirectory
    {
        
        public ServerCreateTempSubDirectory()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerCreateTempSubDirectory_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerCreateTempSubDirectory_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public ServerCreateTempSubDirectory_Result()
        {
        }
        
        public ServerCreateTempSubDirectory_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerRemoveDirectory", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerRemoveDirectory
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string directoryPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public bool recursive;
        
        public ServerRemoveDirectory()
        {
        }
        
        public ServerRemoveDirectory(string directoryPath, bool recursive)
        {
            this.directoryPath = directoryPath;
            this.recursive = recursive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ServerRemoveDirectory_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ServerRemoveDirectory_Result
    {
        
        public ServerRemoveDirectory_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileName", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetFileName
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        public GetFileName()
        {
        }
        
        public GetFileName(string filePath)
        {
            this.filePath = filePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileName_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetFileName_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public GetFileName_Result()
        {
        }
        
        public GetFileName_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSafeFileName", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetSafeFileName
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string fileName;
        
        public GetSafeFileName()
        {
        }
        
        public GetSafeFileName(string fileName)
        {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSafeFileName_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetSafeFileName_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public GetSafeFileName_Result()
        {
        }
        
        public GetSafeFileName_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileNameWithoutExtension", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetFileNameWithoutExtension
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        public GetFileNameWithoutExtension()
        {
        }
        
        public GetFileNameWithoutExtension(string filePath)
        {
            this.filePath = filePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileNameWithoutExtension_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetFileNameWithoutExtension_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public GetFileNameWithoutExtension_Result()
        {
        }
        
        public GetFileNameWithoutExtension_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDirectoryName", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetDirectoryName
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string fileName;
        
        public GetDirectoryName()
        {
        }
        
        public GetDirectoryName(string fileName)
        {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDirectoryName_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetDirectoryName_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public GetDirectoryName_Result()
        {
        }
        
        public GetDirectoryName_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientFileProperties", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetClientFileProperties
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string fullFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime modifyDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        public System.DateTime modifyTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=3)]
        public int size;
        
        public GetClientFileProperties()
        {
        }
        
        public GetClientFileProperties(string fullFileName, System.DateTime modifyDate, System.DateTime modifyTime, int size)
        {
            this.fullFileName = fullFileName;
            this.modifyDate = modifyDate;
            this.modifyTime = modifyTime;
            this.size = size;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientFileProperties_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetClientFileProperties_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime modifyDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        public System.DateTime modifyTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public int size;
        
        public GetClientFileProperties_Result()
        {
        }
        
        public GetClientFileProperties_Result(System.DateTime modifyDate, System.DateTime modifyTime, int size)
        {
            this.modifyDate = modifyDate;
            this.modifyTime = modifyTime;
            this.size = size;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CombinePath", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CombinePath
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string basePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string suffix;
        
        public CombinePath()
        {
        }
        
        public CombinePath(string basePath, string suffix)
        {
            this.basePath = basePath;
            this.suffix = suffix;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CombinePath_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CombinePath_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public CombinePath_Result()
        {
        }
        
        public CombinePath_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetToFilterText", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetToFilterText
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filterString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string fileName;
        
        public GetToFilterText()
        {
        }
        
        public GetToFilterText(string filterString, string fileName)
        {
            this.filterString = filterString;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetToFilterText_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetToFilterText_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public GetToFilterText_Result()
        {
        }
        
        public GetToFilterText_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExtension", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetExtension
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string name;
        
        public GetExtension()
        {
        }
        
        public GetExtension(string name)
        {
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExtension_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetExtension_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public GetExtension_Result()
        {
        }
        
        public GetExtension_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenFileDialog", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class OpenFileDialog
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string windowTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string defaultFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public string filterString;
        
        public OpenFileDialog()
        {
        }
        
        public OpenFileDialog(string windowTitle, string defaultFileName, string filterString)
        {
            this.windowTitle = windowTitle;
            this.defaultFileName = defaultFileName;
            this.filterString = filterString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenFileDialog_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class OpenFileDialog_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public OpenFileDialog_Result()
        {
        }
        
        public OpenFileDialog_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveFileDialog", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class SaveFileDialog
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string windowTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string defaultFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public string filterString;
        
        public SaveFileDialog()
        {
        }
        
        public SaveFileDialog(string windowTitle, string defaultFileName, string filterString)
        {
            this.windowTitle = windowTitle;
            this.defaultFileName = defaultFileName;
            this.filterString = filterString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveFileDialog_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class SaveFileDialog_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public SaveFileDialog_Result()
        {
        }
        
        public SaveFileDialog_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectFolderDialog", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class SelectFolderDialog
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string windowTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string selectedFolder;
        
        public SelectFolderDialog()
        {
        }
        
        public SelectFolderDialog(string windowTitle, string selectedFolder)
        {
            this.windowTitle = windowTitle;
            this.selectedFolder = selectedFolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectFolderDialog_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class SelectFolderDialog_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string selectedFolder;
        
        public SelectFolderDialog_Result()
        {
        }
        
        public SelectFolderDialog_Result(bool return_value, string selectedFolder)
        {
            this.return_value = return_value;
            this.selectedFolder = selectedFolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanRunDotNetOnClient", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CanRunDotNetOnClient
    {
        
        public CanRunDotNetOnClient()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanRunDotNetOnClient_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CanRunDotNetOnClient_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public CanRunDotNetOnClient_Result()
        {
        }
        
        public CanRunDotNetOnClient_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsWebClient", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsWebClient
    {
        
        public IsWebClient()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsWebClient_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsWebClient_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public IsWebClient_Result()
        {
        }
        
        public IsWebClient_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsWindowsClient", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsWindowsClient
    {
        
        public IsWindowsClient()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsWindowsClient_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsWindowsClient_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public IsWindowsClient_Result()
        {
        }
        
        public IsWindowsClient_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsValidFileName", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsValidFileName
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string fileName;
        
        public IsValidFileName()
        {
        }
        
        public IsValidFileName(string fileName)
        {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsValidFileName_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsValidFileName_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public IsValidFileName_Result()
        {
        }
        
        public IsValidFileName_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateFileExtension", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ValidateFileExtension
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string validExtensions;
        
        public ValidateFileExtension()
        {
        }
        
        public ValidateFileExtension(string filePath, string validExtensions)
        {
            this.filePath = filePath;
            this.validExtensions = validExtensions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateFileExtension_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ValidateFileExtension_Result
    {
        
        public ValidateFileExtension_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BrowseForFolderDialog", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class BrowseForFolderDialog
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string windowTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string defaultFolderName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=2)]
        public bool showNewFolderButton;
        
        public BrowseForFolderDialog()
        {
        }
        
        public BrowseForFolderDialog(string windowTitle, string defaultFolderName, bool showNewFolderButton)
        {
            this.windowTitle = windowTitle;
            this.defaultFolderName = defaultFolderName;
            this.showNewFolderButton = showNewFolderButton;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BrowseForFolderDialog_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class BrowseForFolderDialog_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public BrowseForFolderDialog_Result()
        {
        }
        
        public BrowseForFolderDialog_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StripNotsupportChrInFileName", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class StripNotsupportChrInFileName
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string inText;
        
        public StripNotsupportChrInFileName()
        {
        }
        
        public StripNotsupportChrInFileName(string inText)
        {
            this.inText = inText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StripNotsupportChrInFileName_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class StripNotsupportChrInFileName_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public StripNotsupportChrInFileName_Result()
        {
        }
        
        public StripNotsupportChrInFileName_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateZipArchiveObject", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateZipArchiveObject
    {
        
        public CreateZipArchiveObject()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateZipArchiveObject_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CreateZipArchiveObject_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public CreateZipArchiveObject_Result()
        {
        }
        
        public CreateZipArchiveObject_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenZipFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class OpenZipFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string serverZipFilePath;
        
        public OpenZipFile()
        {
        }
        
        public OpenZipFile(string serverZipFilePath)
        {
            this.serverZipFilePath = serverZipFilePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenZipFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class OpenZipFile_Result
    {
        
        public OpenZipFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddFileToZipArchive", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class AddFileToZipArchive
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string sourceFileFullPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string pathInZipFile;
        
        public AddFileToZipArchive()
        {
        }
        
        public AddFileToZipArchive(string sourceFileFullPath, string pathInZipFile)
        {
            this.sourceFileFullPath = sourceFileFullPath;
            this.pathInZipFile = pathInZipFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddFileToZipArchive_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class AddFileToZipArchive_Result
    {
        
        public AddFileToZipArchive_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseZipArchive", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CloseZipArchive
    {
        
        public CloseZipArchive()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseZipArchive_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class CloseZipArchive_Result
    {
        
        public CloseZipArchive_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsGZip", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsGZip
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string serverSideFileName;
        
        public IsGZip()
        {
        }
        
        public IsGZip(string serverSideFileName)
        {
            this.serverSideFileName = serverSideFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsGZip_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsGZip_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public IsGZip_Result()
        {
        }
        
        public IsGZip_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExtractZipFile", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ExtractZipFile
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string zipFilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=1)]
        public string destinationFolder;
        
        public ExtractZipFile()
        {
        }
        
        public ExtractZipFile(string zipFilePath, string destinationFolder)
        {
            this.zipFilePath = zipFilePath;
            this.destinationFolder = destinationFolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExtractZipFile_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class ExtractZipFile_Result
    {
        
        public ExtractZipFile_Result()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsClientDirectoryEmpty", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsClientDirectoryEmpty
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string path;
        
        public IsClientDirectoryEmpty()
        {
        }
        
        public IsClientDirectoryEmpty(string path)
        {
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsClientDirectoryEmpty_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsClientDirectoryEmpty_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public IsClientDirectoryEmpty_Result()
        {
        }
        
        public IsClientDirectoryEmpty_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsServerDirectoryEmpty", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsServerDirectoryEmpty
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string path;
        
        public IsServerDirectoryEmpty()
        {
        }
        
        public IsServerDirectoryEmpty(string path)
        {
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsServerDirectoryEmpty_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsServerDirectoryEmpty_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public IsServerDirectoryEmpty_Result()
        {
        }
        
        public IsServerDirectoryEmpty_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsWebOrDeviceClient", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsWebOrDeviceClient
    {
        
        public IsWebOrDeviceClient()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsWebOrDeviceClient_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class IsWebOrDeviceClient_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public bool return_value;
        
        public IsWebOrDeviceClient_Result()
        {
        }
        
        public IsWebOrDeviceClient_Result(bool return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileContent", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetFileContent
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string filePath;
        
        public GetFileContent()
        {
        }
        
        public GetFileContent(string filePath)
        {
            this.filePath = filePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileContent_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", IsWrapped=true)]
    public partial class GetFileContent_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/File_Management", Order=0)]
        public string return_value;
        
        public GetFileContent_Result()
        {
        }
        
        public GetFileContent_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface File_Management_PortChannel : ServiceReference3.File_Management_Port, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class File_Management_PortClient : System.ServiceModel.ClientBase<ServiceReference3.File_Management_Port>, ServiceReference3.File_Management_Port
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public File_Management_PortClient() : 
                base(File_Management_PortClient.GetDefaultBinding(), File_Management_PortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.File_Management_Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public File_Management_PortClient(EndpointConfiguration endpointConfiguration) : 
                base(File_Management_PortClient.GetBindingForEndpoint(endpointConfiguration), File_Management_PortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public File_Management_PortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(File_Management_PortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public File_Management_PortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(File_Management_PortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public File_Management_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ServerTempFileName_Result> ServiceReference3.File_Management_Port.ServerTempFileNameAsync(ServiceReference3.ServerTempFileName request)
        {
            return base.Channel.ServerTempFileNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ServerTempFileName_Result> ServerTempFileNameAsync(string fileExtension)
        {
            ServiceReference3.ServerTempFileName inValue = new ServiceReference3.ServerTempFileName();
            inValue.fileExtension = fileExtension;
            return ((ServiceReference3.File_Management_Port)(this)).ServerTempFileNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ClientTempFileName_Result> ServiceReference3.File_Management_Port.ClientTempFileNameAsync(ServiceReference3.ClientTempFileName request)
        {
            return base.Channel.ClientTempFileNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ClientTempFileName_Result> ClientTempFileNameAsync(string fileExtension)
        {
            ServiceReference3.ClientTempFileName inValue = new ServiceReference3.ClientTempFileName();
            inValue.fileExtension = fileExtension;
            return ((ServiceReference3.File_Management_Port)(this)).ClientTempFileNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CreateClientTempSubDirectory_Result> ServiceReference3.File_Management_Port.CreateClientTempSubDirectoryAsync(ServiceReference3.CreateClientTempSubDirectory request)
        {
            return base.Channel.CreateClientTempSubDirectoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CreateClientTempSubDirectory_Result> CreateClientTempSubDirectoryAsync()
        {
            ServiceReference3.CreateClientTempSubDirectory inValue = new ServiceReference3.CreateClientTempSubDirectory();
            return ((ServiceReference3.File_Management_Port)(this)).CreateClientTempSubDirectoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.DownloadTempFile_Result> ServiceReference3.File_Management_Port.DownloadTempFileAsync(ServiceReference3.DownloadTempFile request)
        {
            return base.Channel.DownloadTempFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.DownloadTempFile_Result> DownloadTempFileAsync(string serverFileName)
        {
            ServiceReference3.DownloadTempFile inValue = new ServiceReference3.DownloadTempFile();
            inValue.serverFileName = serverFileName;
            return ((ServiceReference3.File_Management_Port)(this)).DownloadTempFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFileSilent_Result> ServiceReference3.File_Management_Port.UploadFileSilentAsync(ServiceReference3.UploadFileSilent request)
        {
            return base.Channel.UploadFileSilentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.UploadFileSilent_Result> UploadFileSilentAsync(string clientFilePath)
        {
            ServiceReference3.UploadFileSilent inValue = new ServiceReference3.UploadFileSilent();
            inValue.clientFilePath = clientFilePath;
            return ((ServiceReference3.File_Management_Port)(this)).UploadFileSilentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFileSilentToServerPath_Result> ServiceReference3.File_Management_Port.UploadFileSilentToServerPathAsync(ServiceReference3.UploadFileSilentToServerPath request)
        {
            return base.Channel.UploadFileSilentToServerPathAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.UploadFileSilentToServerPath_Result> UploadFileSilentToServerPathAsync(string clientFilePath, string serverFilePath)
        {
            ServiceReference3.UploadFileSilentToServerPath inValue = new ServiceReference3.UploadFileSilentToServerPath();
            inValue.clientFilePath = clientFilePath;
            inValue.serverFilePath = serverFilePath;
            return ((ServiceReference3.File_Management_Port)(this)).UploadFileSilentToServerPathAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFile_Result> ServiceReference3.File_Management_Port.UploadFileAsync(ServiceReference3.UploadFile request)
        {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.UploadFile_Result> UploadFileAsync(string windowTitle, string clientFileName)
        {
            ServiceReference3.UploadFile inValue = new ServiceReference3.UploadFile();
            inValue.windowTitle = windowTitle;
            inValue.clientFileName = clientFileName;
            return ((ServiceReference3.File_Management_Port)(this)).UploadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.UploadFileWithFilter_Result> ServiceReference3.File_Management_Port.UploadFileWithFilterAsync(ServiceReference3.UploadFileWithFilter request)
        {
            return base.Channel.UploadFileWithFilterAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.UploadFileWithFilter_Result> UploadFileWithFilterAsync(string windowTitle, string clientFileName, string fileFilter, string extFilter)
        {
            ServiceReference3.UploadFileWithFilter inValue = new ServiceReference3.UploadFileWithFilter();
            inValue.windowTitle = windowTitle;
            inValue.clientFileName = clientFileName;
            inValue.fileFilter = fileFilter;
            inValue.extFilter = extFilter;
            return ((ServiceReference3.File_Management_Port)(this)).UploadFileWithFilterAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.Magicpath_Result> ServiceReference3.File_Management_Port.MagicpathAsync(ServiceReference3.Magicpath request)
        {
            return base.Channel.MagicpathAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.Magicpath_Result> MagicpathAsync()
        {
            ServiceReference3.Magicpath inValue = new ServiceReference3.Magicpath();
            return ((ServiceReference3.File_Management_Port)(this)).MagicpathAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.DownloadHandler_Result> ServiceReference3.File_Management_Port.DownloadHandlerAsync(ServiceReference3.DownloadHandler request)
        {
            return base.Channel.DownloadHandlerAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.DownloadHandler_Result> DownloadHandlerAsync(string fromFile, string dialogTitle, string toFolder, string toFilter, string toFile)
        {
            ServiceReference3.DownloadHandler inValue = new ServiceReference3.DownloadHandler();
            inValue.fromFile = fromFile;
            inValue.dialogTitle = dialogTitle;
            inValue.toFolder = toFolder;
            inValue.toFilter = toFilter;
            inValue.toFile = toFile;
            return ((ServiceReference3.File_Management_Port)(this)).DownloadHandlerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.DownloadToFile_Result> ServiceReference3.File_Management_Port.DownloadToFileAsync(ServiceReference3.DownloadToFile request)
        {
            return base.Channel.DownloadToFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.DownloadToFile_Result> DownloadToFileAsync(string serverFileName, string clientFileName)
        {
            ServiceReference3.DownloadToFile inValue = new ServiceReference3.DownloadToFile();
            inValue.serverFileName = serverFileName;
            inValue.clientFileName = clientFileName;
            return ((ServiceReference3.File_Management_Port)(this)).DownloadToFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.AppendAllTextToClientFile_Result> ServiceReference3.File_Management_Port.AppendAllTextToClientFileAsync(ServiceReference3.AppendAllTextToClientFile request)
        {
            return base.Channel.AppendAllTextToClientFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.AppendAllTextToClientFile_Result> AppendAllTextToClientFileAsync(string serverFileName, string clientFileName)
        {
            ServiceReference3.AppendAllTextToClientFile inValue = new ServiceReference3.AppendAllTextToClientFile();
            inValue.serverFileName = serverFileName;
            inValue.clientFileName = clientFileName;
            return ((ServiceReference3.File_Management_Port)(this)).AppendAllTextToClientFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.MoveAndRenameClientFile_Result> ServiceReference3.File_Management_Port.MoveAndRenameClientFileAsync(ServiceReference3.MoveAndRenameClientFile request)
        {
            return base.Channel.MoveAndRenameClientFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.MoveAndRenameClientFile_Result> MoveAndRenameClientFileAsync(string oldFilePath, string newFileName, string newSubDirectoryName)
        {
            ServiceReference3.MoveAndRenameClientFile inValue = new ServiceReference3.MoveAndRenameClientFile();
            inValue.oldFilePath = oldFilePath;
            inValue.newFileName = newFileName;
            inValue.newSubDirectoryName = newSubDirectoryName;
            return ((ServiceReference3.File_Management_Port)(this)).MoveAndRenameClientFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CreateClientFile_Result> ServiceReference3.File_Management_Port.CreateClientFileAsync(ServiceReference3.CreateClientFile request)
        {
            return base.Channel.CreateClientFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CreateClientFile_Result> CreateClientFileAsync(string filePathName)
        {
            ServiceReference3.CreateClientFile inValue = new ServiceReference3.CreateClientFile();
            inValue.filePathName = filePathName;
            return ((ServiceReference3.File_Management_Port)(this)).CreateClientFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.DeleteClientFile_Result> ServiceReference3.File_Management_Port.DeleteClientFileAsync(ServiceReference3.DeleteClientFile request)
        {
            return base.Channel.DeleteClientFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.DeleteClientFile_Result> DeleteClientFileAsync(string filePath)
        {
            ServiceReference3.DeleteClientFile inValue = new ServiceReference3.DeleteClientFile();
            inValue.filePath = filePath;
            return ((ServiceReference3.File_Management_Port)(this)).DeleteClientFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CopyClientFile_Result> ServiceReference3.File_Management_Port.CopyClientFileAsync(ServiceReference3.CopyClientFile request)
        {
            return base.Channel.CopyClientFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CopyClientFile_Result> CopyClientFileAsync(string sourceFileName, string destFileName, bool overWrite)
        {
            ServiceReference3.CopyClientFile inValue = new ServiceReference3.CopyClientFile();
            inValue.sourceFileName = sourceFileName;
            inValue.destFileName = destFileName;
            inValue.overWrite = overWrite;
            return ((ServiceReference3.File_Management_Port)(this)).CopyClientFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ClientFileExists_Result> ServiceReference3.File_Management_Port.ClientFileExistsAsync(ServiceReference3.ClientFileExists request)
        {
            return base.Channel.ClientFileExistsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ClientFileExists_Result> ClientFileExistsAsync(string filePath)
        {
            ServiceReference3.ClientFileExists inValue = new ServiceReference3.ClientFileExists();
            inValue.filePath = filePath;
            return ((ServiceReference3.File_Management_Port)(this)).ClientFileExistsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ClientDirectoryExists_Result> ServiceReference3.File_Management_Port.ClientDirectoryExistsAsync(ServiceReference3.ClientDirectoryExists request)
        {
            return base.Channel.ClientDirectoryExistsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ClientDirectoryExists_Result> ClientDirectoryExistsAsync(string directoryPath)
        {
            ServiceReference3.ClientDirectoryExists inValue = new ServiceReference3.ClientDirectoryExists();
            inValue.directoryPath = directoryPath;
            return ((ServiceReference3.File_Management_Port)(this)).ClientDirectoryExistsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CreateClientDirectory_Result> ServiceReference3.File_Management_Port.CreateClientDirectoryAsync(ServiceReference3.CreateClientDirectory request)
        {
            return base.Channel.CreateClientDirectoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CreateClientDirectory_Result> CreateClientDirectoryAsync(string directoryPath)
        {
            ServiceReference3.CreateClientDirectory inValue = new ServiceReference3.CreateClientDirectory();
            inValue.directoryPath = directoryPath;
            return ((ServiceReference3.File_Management_Port)(this)).CreateClientDirectoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.DeleteClientDirectory_Result> ServiceReference3.File_Management_Port.DeleteClientDirectoryAsync(ServiceReference3.DeleteClientDirectory request)
        {
            return base.Channel.DeleteClientDirectoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.DeleteClientDirectory_Result> DeleteClientDirectoryAsync(string directoryPath)
        {
            ServiceReference3.DeleteClientDirectory inValue = new ServiceReference3.DeleteClientDirectory();
            inValue.directoryPath = directoryPath;
            return ((ServiceReference3.File_Management_Port)(this)).DeleteClientDirectoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.UploadClientDirectorySilent_Result> ServiceReference3.File_Management_Port.UploadClientDirectorySilentAsync(ServiceReference3.UploadClientDirectorySilent request)
        {
            return base.Channel.UploadClientDirectorySilentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.UploadClientDirectorySilent_Result> UploadClientDirectorySilentAsync(string directoryPath, string fileExtensionFilter, bool includeSubDirectories)
        {
            ServiceReference3.UploadClientDirectorySilent inValue = new ServiceReference3.UploadClientDirectorySilent();
            inValue.directoryPath = directoryPath;
            inValue.fileExtensionFilter = fileExtensionFilter;
            inValue.includeSubDirectories = includeSubDirectories;
            return ((ServiceReference3.File_Management_Port)(this)).UploadClientDirectorySilentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.MoveFile_Result> ServiceReference3.File_Management_Port.MoveFileAsync(ServiceReference3.MoveFile request)
        {
            return base.Channel.MoveFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.MoveFile_Result> MoveFileAsync(string sourceFileName, string targetFileName)
        {
            ServiceReference3.MoveFile inValue = new ServiceReference3.MoveFile();
            inValue.sourceFileName = sourceFileName;
            inValue.targetFileName = targetFileName;
            return ((ServiceReference3.File_Management_Port)(this)).MoveFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CopyServerFile_Result> ServiceReference3.File_Management_Port.CopyServerFileAsync(ServiceReference3.CopyServerFile request)
        {
            return base.Channel.CopyServerFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CopyServerFile_Result> CopyServerFileAsync(string sourceFileName, string targetFileName, bool overwrite)
        {
            ServiceReference3.CopyServerFile inValue = new ServiceReference3.CopyServerFile();
            inValue.sourceFileName = sourceFileName;
            inValue.targetFileName = targetFileName;
            inValue.overwrite = overwrite;
            return ((ServiceReference3.File_Management_Port)(this)).CopyServerFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ServerFileExists_Result> ServiceReference3.File_Management_Port.ServerFileExistsAsync(ServiceReference3.ServerFileExists request)
        {
            return base.Channel.ServerFileExistsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ServerFileExists_Result> ServerFileExistsAsync(string filePath)
        {
            ServiceReference3.ServerFileExists inValue = new ServiceReference3.ServerFileExists();
            inValue.filePath = filePath;
            return ((ServiceReference3.File_Management_Port)(this)).ServerFileExistsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.DeleteServerFile_Result> ServiceReference3.File_Management_Port.DeleteServerFileAsync(ServiceReference3.DeleteServerFile request)
        {
            return base.Channel.DeleteServerFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.DeleteServerFile_Result> DeleteServerFileAsync(string filePath)
        {
            ServiceReference3.DeleteServerFile inValue = new ServiceReference3.DeleteServerFile();
            inValue.filePath = filePath;
            return ((ServiceReference3.File_Management_Port)(this)).DeleteServerFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ServerDirectoryExists_Result> ServiceReference3.File_Management_Port.ServerDirectoryExistsAsync(ServiceReference3.ServerDirectoryExists request)
        {
            return base.Channel.ServerDirectoryExistsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ServerDirectoryExists_Result> ServerDirectoryExistsAsync(string directoryPath)
        {
            ServiceReference3.ServerDirectoryExists inValue = new ServiceReference3.ServerDirectoryExists();
            inValue.directoryPath = directoryPath;
            return ((ServiceReference3.File_Management_Port)(this)).ServerDirectoryExistsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ServerCreateDirectory_Result> ServiceReference3.File_Management_Port.ServerCreateDirectoryAsync(ServiceReference3.ServerCreateDirectory request)
        {
            return base.Channel.ServerCreateDirectoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ServerCreateDirectory_Result> ServerCreateDirectoryAsync(string directoryPath)
        {
            ServiceReference3.ServerCreateDirectory inValue = new ServiceReference3.ServerCreateDirectory();
            inValue.directoryPath = directoryPath;
            return ((ServiceReference3.File_Management_Port)(this)).ServerCreateDirectoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ServerCreateTempSubDirectory_Result> ServiceReference3.File_Management_Port.ServerCreateTempSubDirectoryAsync(ServiceReference3.ServerCreateTempSubDirectory request)
        {
            return base.Channel.ServerCreateTempSubDirectoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ServerCreateTempSubDirectory_Result> ServerCreateTempSubDirectoryAsync()
        {
            ServiceReference3.ServerCreateTempSubDirectory inValue = new ServiceReference3.ServerCreateTempSubDirectory();
            return ((ServiceReference3.File_Management_Port)(this)).ServerCreateTempSubDirectoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ServerRemoveDirectory_Result> ServiceReference3.File_Management_Port.ServerRemoveDirectoryAsync(ServiceReference3.ServerRemoveDirectory request)
        {
            return base.Channel.ServerRemoveDirectoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ServerRemoveDirectory_Result> ServerRemoveDirectoryAsync(string directoryPath, bool recursive)
        {
            ServiceReference3.ServerRemoveDirectory inValue = new ServiceReference3.ServerRemoveDirectory();
            inValue.directoryPath = directoryPath;
            inValue.recursive = recursive;
            return ((ServiceReference3.File_Management_Port)(this)).ServerRemoveDirectoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.GetFileName_Result> ServiceReference3.File_Management_Port.GetFileNameAsync(ServiceReference3.GetFileName request)
        {
            return base.Channel.GetFileNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetFileName_Result> GetFileNameAsync(string filePath)
        {
            ServiceReference3.GetFileName inValue = new ServiceReference3.GetFileName();
            inValue.filePath = filePath;
            return ((ServiceReference3.File_Management_Port)(this)).GetFileNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.GetSafeFileName_Result> ServiceReference3.File_Management_Port.GetSafeFileNameAsync(ServiceReference3.GetSafeFileName request)
        {
            return base.Channel.GetSafeFileNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetSafeFileName_Result> GetSafeFileNameAsync(string fileName)
        {
            ServiceReference3.GetSafeFileName inValue = new ServiceReference3.GetSafeFileName();
            inValue.fileName = fileName;
            return ((ServiceReference3.File_Management_Port)(this)).GetSafeFileNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.GetFileNameWithoutExtension_Result> ServiceReference3.File_Management_Port.GetFileNameWithoutExtensionAsync(ServiceReference3.GetFileNameWithoutExtension request)
        {
            return base.Channel.GetFileNameWithoutExtensionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetFileNameWithoutExtension_Result> GetFileNameWithoutExtensionAsync(string filePath)
        {
            ServiceReference3.GetFileNameWithoutExtension inValue = new ServiceReference3.GetFileNameWithoutExtension();
            inValue.filePath = filePath;
            return ((ServiceReference3.File_Management_Port)(this)).GetFileNameWithoutExtensionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.GetDirectoryName_Result> ServiceReference3.File_Management_Port.GetDirectoryNameAsync(ServiceReference3.GetDirectoryName request)
        {
            return base.Channel.GetDirectoryNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetDirectoryName_Result> GetDirectoryNameAsync(string fileName)
        {
            ServiceReference3.GetDirectoryName inValue = new ServiceReference3.GetDirectoryName();
            inValue.fileName = fileName;
            return ((ServiceReference3.File_Management_Port)(this)).GetDirectoryNameAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetClientFileProperties_Result> GetClientFilePropertiesAsync(ServiceReference3.GetClientFileProperties request)
        {
            return base.Channel.GetClientFilePropertiesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CombinePath_Result> ServiceReference3.File_Management_Port.CombinePathAsync(ServiceReference3.CombinePath request)
        {
            return base.Channel.CombinePathAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CombinePath_Result> CombinePathAsync(string basePath, string suffix)
        {
            ServiceReference3.CombinePath inValue = new ServiceReference3.CombinePath();
            inValue.basePath = basePath;
            inValue.suffix = suffix;
            return ((ServiceReference3.File_Management_Port)(this)).CombinePathAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.GetToFilterText_Result> ServiceReference3.File_Management_Port.GetToFilterTextAsync(ServiceReference3.GetToFilterText request)
        {
            return base.Channel.GetToFilterTextAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetToFilterText_Result> GetToFilterTextAsync(string filterString, string fileName)
        {
            ServiceReference3.GetToFilterText inValue = new ServiceReference3.GetToFilterText();
            inValue.filterString = filterString;
            inValue.fileName = fileName;
            return ((ServiceReference3.File_Management_Port)(this)).GetToFilterTextAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.GetExtension_Result> ServiceReference3.File_Management_Port.GetExtensionAsync(ServiceReference3.GetExtension request)
        {
            return base.Channel.GetExtensionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetExtension_Result> GetExtensionAsync(string name)
        {
            ServiceReference3.GetExtension inValue = new ServiceReference3.GetExtension();
            inValue.name = name;
            return ((ServiceReference3.File_Management_Port)(this)).GetExtensionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.OpenFileDialog_Result> ServiceReference3.File_Management_Port.OpenFileDialogAsync(ServiceReference3.OpenFileDialog request)
        {
            return base.Channel.OpenFileDialogAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.OpenFileDialog_Result> OpenFileDialogAsync(string windowTitle, string defaultFileName, string filterString)
        {
            ServiceReference3.OpenFileDialog inValue = new ServiceReference3.OpenFileDialog();
            inValue.windowTitle = windowTitle;
            inValue.defaultFileName = defaultFileName;
            inValue.filterString = filterString;
            return ((ServiceReference3.File_Management_Port)(this)).OpenFileDialogAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.SaveFileDialog_Result> ServiceReference3.File_Management_Port.SaveFileDialogAsync(ServiceReference3.SaveFileDialog request)
        {
            return base.Channel.SaveFileDialogAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.SaveFileDialog_Result> SaveFileDialogAsync(string windowTitle, string defaultFileName, string filterString)
        {
            ServiceReference3.SaveFileDialog inValue = new ServiceReference3.SaveFileDialog();
            inValue.windowTitle = windowTitle;
            inValue.defaultFileName = defaultFileName;
            inValue.filterString = filterString;
            return ((ServiceReference3.File_Management_Port)(this)).SaveFileDialogAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.SelectFolderDialog_Result> SelectFolderDialogAsync(ServiceReference3.SelectFolderDialog request)
        {
            return base.Channel.SelectFolderDialogAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CanRunDotNetOnClient_Result> ServiceReference3.File_Management_Port.CanRunDotNetOnClientAsync(ServiceReference3.CanRunDotNetOnClient request)
        {
            return base.Channel.CanRunDotNetOnClientAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CanRunDotNetOnClient_Result> CanRunDotNetOnClientAsync()
        {
            ServiceReference3.CanRunDotNetOnClient inValue = new ServiceReference3.CanRunDotNetOnClient();
            return ((ServiceReference3.File_Management_Port)(this)).CanRunDotNetOnClientAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.IsWebClient_Result> ServiceReference3.File_Management_Port.IsWebClientAsync(ServiceReference3.IsWebClient request)
        {
            return base.Channel.IsWebClientAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.IsWebClient_Result> IsWebClientAsync()
        {
            ServiceReference3.IsWebClient inValue = new ServiceReference3.IsWebClient();
            return ((ServiceReference3.File_Management_Port)(this)).IsWebClientAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.IsWindowsClient_Result> ServiceReference3.File_Management_Port.IsWindowsClientAsync(ServiceReference3.IsWindowsClient request)
        {
            return base.Channel.IsWindowsClientAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.IsWindowsClient_Result> IsWindowsClientAsync()
        {
            ServiceReference3.IsWindowsClient inValue = new ServiceReference3.IsWindowsClient();
            return ((ServiceReference3.File_Management_Port)(this)).IsWindowsClientAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.IsValidFileName_Result> ServiceReference3.File_Management_Port.IsValidFileNameAsync(ServiceReference3.IsValidFileName request)
        {
            return base.Channel.IsValidFileNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.IsValidFileName_Result> IsValidFileNameAsync(string fileName)
        {
            ServiceReference3.IsValidFileName inValue = new ServiceReference3.IsValidFileName();
            inValue.fileName = fileName;
            return ((ServiceReference3.File_Management_Port)(this)).IsValidFileNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ValidateFileExtension_Result> ServiceReference3.File_Management_Port.ValidateFileExtensionAsync(ServiceReference3.ValidateFileExtension request)
        {
            return base.Channel.ValidateFileExtensionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ValidateFileExtension_Result> ValidateFileExtensionAsync(string filePath, string validExtensions)
        {
            ServiceReference3.ValidateFileExtension inValue = new ServiceReference3.ValidateFileExtension();
            inValue.filePath = filePath;
            inValue.validExtensions = validExtensions;
            return ((ServiceReference3.File_Management_Port)(this)).ValidateFileExtensionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.BrowseForFolderDialog_Result> ServiceReference3.File_Management_Port.BrowseForFolderDialogAsync(ServiceReference3.BrowseForFolderDialog request)
        {
            return base.Channel.BrowseForFolderDialogAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.BrowseForFolderDialog_Result> BrowseForFolderDialogAsync(string windowTitle, string defaultFolderName, bool showNewFolderButton)
        {
            ServiceReference3.BrowseForFolderDialog inValue = new ServiceReference3.BrowseForFolderDialog();
            inValue.windowTitle = windowTitle;
            inValue.defaultFolderName = defaultFolderName;
            inValue.showNewFolderButton = showNewFolderButton;
            return ((ServiceReference3.File_Management_Port)(this)).BrowseForFolderDialogAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.StripNotsupportChrInFileName_Result> ServiceReference3.File_Management_Port.StripNotsupportChrInFileNameAsync(ServiceReference3.StripNotsupportChrInFileName request)
        {
            return base.Channel.StripNotsupportChrInFileNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.StripNotsupportChrInFileName_Result> StripNotsupportChrInFileNameAsync(string inText)
        {
            ServiceReference3.StripNotsupportChrInFileName inValue = new ServiceReference3.StripNotsupportChrInFileName();
            inValue.inText = inText;
            return ((ServiceReference3.File_Management_Port)(this)).StripNotsupportChrInFileNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CreateZipArchiveObject_Result> ServiceReference3.File_Management_Port.CreateZipArchiveObjectAsync(ServiceReference3.CreateZipArchiveObject request)
        {
            return base.Channel.CreateZipArchiveObjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CreateZipArchiveObject_Result> CreateZipArchiveObjectAsync()
        {
            ServiceReference3.CreateZipArchiveObject inValue = new ServiceReference3.CreateZipArchiveObject();
            return ((ServiceReference3.File_Management_Port)(this)).CreateZipArchiveObjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.OpenZipFile_Result> ServiceReference3.File_Management_Port.OpenZipFileAsync(ServiceReference3.OpenZipFile request)
        {
            return base.Channel.OpenZipFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.OpenZipFile_Result> OpenZipFileAsync(string serverZipFilePath)
        {
            ServiceReference3.OpenZipFile inValue = new ServiceReference3.OpenZipFile();
            inValue.serverZipFilePath = serverZipFilePath;
            return ((ServiceReference3.File_Management_Port)(this)).OpenZipFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.AddFileToZipArchive_Result> ServiceReference3.File_Management_Port.AddFileToZipArchiveAsync(ServiceReference3.AddFileToZipArchive request)
        {
            return base.Channel.AddFileToZipArchiveAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.AddFileToZipArchive_Result> AddFileToZipArchiveAsync(string sourceFileFullPath, string pathInZipFile)
        {
            ServiceReference3.AddFileToZipArchive inValue = new ServiceReference3.AddFileToZipArchive();
            inValue.sourceFileFullPath = sourceFileFullPath;
            inValue.pathInZipFile = pathInZipFile;
            return ((ServiceReference3.File_Management_Port)(this)).AddFileToZipArchiveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.CloseZipArchive_Result> ServiceReference3.File_Management_Port.CloseZipArchiveAsync(ServiceReference3.CloseZipArchive request)
        {
            return base.Channel.CloseZipArchiveAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.CloseZipArchive_Result> CloseZipArchiveAsync()
        {
            ServiceReference3.CloseZipArchive inValue = new ServiceReference3.CloseZipArchive();
            return ((ServiceReference3.File_Management_Port)(this)).CloseZipArchiveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.IsGZip_Result> ServiceReference3.File_Management_Port.IsGZipAsync(ServiceReference3.IsGZip request)
        {
            return base.Channel.IsGZipAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.IsGZip_Result> IsGZipAsync(string serverSideFileName)
        {
            ServiceReference3.IsGZip inValue = new ServiceReference3.IsGZip();
            inValue.serverSideFileName = serverSideFileName;
            return ((ServiceReference3.File_Management_Port)(this)).IsGZipAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.ExtractZipFile_Result> ServiceReference3.File_Management_Port.ExtractZipFileAsync(ServiceReference3.ExtractZipFile request)
        {
            return base.Channel.ExtractZipFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.ExtractZipFile_Result> ExtractZipFileAsync(string zipFilePath, string destinationFolder)
        {
            ServiceReference3.ExtractZipFile inValue = new ServiceReference3.ExtractZipFile();
            inValue.zipFilePath = zipFilePath;
            inValue.destinationFolder = destinationFolder;
            return ((ServiceReference3.File_Management_Port)(this)).ExtractZipFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.IsClientDirectoryEmpty_Result> ServiceReference3.File_Management_Port.IsClientDirectoryEmptyAsync(ServiceReference3.IsClientDirectoryEmpty request)
        {
            return base.Channel.IsClientDirectoryEmptyAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.IsClientDirectoryEmpty_Result> IsClientDirectoryEmptyAsync(string path)
        {
            ServiceReference3.IsClientDirectoryEmpty inValue = new ServiceReference3.IsClientDirectoryEmpty();
            inValue.path = path;
            return ((ServiceReference3.File_Management_Port)(this)).IsClientDirectoryEmptyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.IsServerDirectoryEmpty_Result> ServiceReference3.File_Management_Port.IsServerDirectoryEmptyAsync(ServiceReference3.IsServerDirectoryEmpty request)
        {
            return base.Channel.IsServerDirectoryEmptyAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.IsServerDirectoryEmpty_Result> IsServerDirectoryEmptyAsync(string path)
        {
            ServiceReference3.IsServerDirectoryEmpty inValue = new ServiceReference3.IsServerDirectoryEmpty();
            inValue.path = path;
            return ((ServiceReference3.File_Management_Port)(this)).IsServerDirectoryEmptyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.IsWebOrDeviceClient_Result> ServiceReference3.File_Management_Port.IsWebOrDeviceClientAsync(ServiceReference3.IsWebOrDeviceClient request)
        {
            return base.Channel.IsWebOrDeviceClientAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.IsWebOrDeviceClient_Result> IsWebOrDeviceClientAsync()
        {
            ServiceReference3.IsWebOrDeviceClient inValue = new ServiceReference3.IsWebOrDeviceClient();
            return ((ServiceReference3.File_Management_Port)(this)).IsWebOrDeviceClientAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference3.GetFileContent_Result> ServiceReference3.File_Management_Port.GetFileContentAsync(ServiceReference3.GetFileContent request)
        {
            return base.Channel.GetFileContentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.GetFileContent_Result> GetFileContentAsync(string filePath)
        {
            ServiceReference3.GetFileContent inValue = new ServiceReference3.GetFileContent();
            inValue.filePath = filePath;
            return ((ServiceReference3.File_Management_Port)(this)).GetFileContentAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.File_Management_Port))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.File_Management_Port))
            {
                return new System.ServiceModel.EndpointAddress("http://nb-marven.softera.lt:7047/DynamicsNAV100/WS/CRONUS International Ltd./Code" +
                        "unit/File_Management?wsdl");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return File_Management_PortClient.GetBindingForEndpoint(EndpointConfiguration.File_Management_Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return File_Management_PortClient.GetEndpointAddress(EndpointConfiguration.File_Management_Port);
        }
        
        public enum EndpointConfiguration
        {
            
            File_Management_Port,
        }
    }
}
